/********************************************
 * DO NOT EDIT THIS FILE
 * the verification process may break
 *******************************************/
//var bcrypt = require('bcrypt');
var express = require('express');
var app = express();
var fs = require('fs');
var path = require('path');
const helmet = require('helmet');
const bcrypt = require("bcrypt");

app.use(helmet(
  {
    frameguard: { action: "deny" },
    contentSecurityPolicy:
    {
      directives:
      {
        defaultSrc: ["'self'"],
        styleSrc: ['style.com']
        //scriptSrc: ["'self'", 'trusted-cdn.com']
      }
    },
    dnsPrefetchControl: false
  }
));
app.use(helmet.hidePoweredBy());
//app.use(helmet.frameguard({ action: "deny" }));
app.use(helmet.frameguard());
app.use(helmet.xssFilter());
app.use(helmet.noSniff());
app.use(helmet.ieNoOpen());
app.use(helmet.hsts({
  maxAge: 90*24*60*60,
  force: true
}));
app.use(helmet.dnsPrefetchControl());
app.use(helmet.noCache());
/*app.use(helmet.contentSecurityPolicy({
  directives:
  {
    defaultSrc: ["'self'"],
    scriptSrc: ["'self'", 'trusted-cdn.com']
  }
}));*/
//app.use(helmet.contentSecurityPolicy());

app.use(function(req, res, next) {
  res.set({
    "Access-Control-Allow-Origin" : "*",
    "Access-Control-Allow-Headers" : "Origin, X-Requested-With, content-type, Accept"
  });
  app.disable('x-powered-by');
  next();
});

app.get('/file/*?', function(req, res, next) {
  if(req.params[0] === '.env') { return next({status: 401, message: 'ACCESS DENIED'}) }
  fs.readFile(path.join(__dirname, req.params[0]), function(err, data){
    if(err) { return next(err) }
    res.type('txt').send(data.toString());
  });
});


var main = require('./myApp.js');
app.get('/app-info', function(req, res) {
  
  // list middlewares mounted on the '/' camper's app
  var appMainRouteStack = main._router.stack
    .filter(s => s.path === '')
    .map(l => l.name)
    // filter out express default middlewares
    .filter(n => !(n === 'query' ||
      n === 'expressInit' || n === 'serveStatic'));
    
    // filter out CORS Headers
    var hs = Object.keys(res._headers)
      .filter(h => !h.match(/^access-control-\w+/));
    var hObj = {};
    hs.forEach(h => {hObj[h] = res._headers[h]});
    delete res._headers['strict-transport-security'];
  res.json({headers: hObj, appStack: appMainRouteStack });
});

app.get('/package.json', function(req, res, next) {
	    fs.readFile(__dirname + '/package.json', function(err, data) {
	      if(err) return next(err);
	      res.type('txt').send(data.toString());
	    });
	  });

app.use(function(req, res, next){
  res.status(404).type('txt').send('Not Found');
});

module.exports = app;

/********************************************
 * DO NOT EDIT THIS FILE
 * the verification process may break
 *******************************************/
